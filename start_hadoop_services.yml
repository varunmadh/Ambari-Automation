# Play 1: Setup Ambari on Ubuntu 22 (Common tasks for all nodes)
- name: Setup Ambari on Ubuntu 22 (Common tasks for all nodes)
  hosts: hadoop
  become: yes
  vars:
    private_ip: "{{ ansible_default_ipv4.address }}"
    hostname: "{{ inventory_hostname }}"
  tasks:
    - name: Update package list
      apt:
        update_cache: yes

    - name: Update /etc/hosts file with private IP and hostname
      lineinfile:
        path: /etc/hosts
        line: "{{ private_ip }} {{ hostname }}"
      notify: restart network

    - name: Upgrade all installed packages
      apt:
        upgrade: dist
        autoremove: yes

    - name: Install necessary common packages
      apt:
        name:
          - curl
          - unzip
          - tar
          - wget
          - gcc
          - python2
          - openssl
          - ntp

        state: present

    - name: Generate SSH key pair if not exists
      command: ssh-keygen -t rsa -q -f ~/.ssh/id_rsa -N ""
      args:
        creates: ~/.ssh/id_rsa

    - name: Download Ambari repository file
      get_url:
        url: https://clemlabs.s3.eu-west-3.amazonaws.com/ubuntu22/ambari-release/2.7.8.0.0-101/ambari.list
        dest: /etc/apt/sources.list.d/ambari.list

    - name: Download ODP repository file
      get_url:
        url: https://clemlabs.s3.eu-west-3.amazonaws.com/ubuntu22/odp-release/1.2.1.0-187/odp.list
        dest: /etc/apt/sources.list.d/odp.list

    - name: Add GPG key for Ambari and ODP
      apt_key:
        keyserver: keyserver.ubuntu.com
        id: '449E83E81403D1C5'
        state: present

    - name: Update apt repository cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

  handlers:
    - name: restart network
      service:
        name: networking
        state: restarted

# Play 2: Setup Ambari Agent on Agent nodes
- name: Setup Ambari Agent on Agent nodes
  hosts: agents
  become: yes
  vars:
    ambari_server_dns: shreyash-server-1.us-west1-b.c.tidal-triumph-420807.internal
  tasks:
    - name: Update package list with insecure repositories allowed
      command: sudo apt-get update --allow-insecure-repositories
      become: yes

    - name: Install necessary agent packages
      apt:
        name:
          - openjdk-8-jre-headless
          - ambari-agent
        state: present

    - name: Show Ambari agent package details
      command: apt-cache showpkg ambari-agent

    - name: Replace hostname with Ambari Server DNS name
      lineinfile:
        path: /etc/ambari-agent/conf/ambari-agent.ini
        regexp: 'hostname=.*'
        line: 'hostname={{ ambari_server_dns }}'
        backup: yes

    - name: Restart Ambari Agent
      service:
        name: ambari-agent
        state: restarted
        enabled: yes

# Play 3: Setup Ambari Server on Server node
- name: Setup Ambari Server on Server node
  hosts: server
  become: yes
  vars:
    java_home: /usr/lib/jvm/java-1.8.0-openjdk-amd64
    postgres_hostname: 34.155.119.221
  tasks:
    - name: Update package list with insecure repositories allowed
      command: sudo apt-get update --allow-insecure-repositories
      become: yes

    - name: Install necessary server packages
      apt:
        name:
          - openjdk-8-jre-headless
          - ambari-server
          - ambari-agent
        state: present
    - name: Show Ambari server package details
      command: apt-cache showpkg ambari-server

    - name: Install Expect
      apt:
        name: expect
        state: present

    - name: Setup Ambari Server with PostgreSQL database
      expect:
        command: "ambari-server setup --database=postgres --databasehost={{ postgres_hostname }} --databaseport=5432 --databasename=ambari --databaseusername=ambari --databasepassword=ambari"
        responses:
          "Customize user account for ambari-server daemon": "y"
          "Enter user account": "root"
          "Do you want to change Oracle JDK": "y"
          "Enter choice": "2"
          "Path to JAVA_HOME": "/usr/lib/jvm/java-1.8.0-openjdk-amd64"
          "Do you accept the Oracle Binary Code License Agreement": "y"
          "Enable Ambari Server to download and install GPL Licensed LZO packages": "y"
          "Proceed with configuring remote database connection properties": "y"

    - name: Start Ambari server
      command: sudo ambari-server start
      environment:
        AMBARI_DB_PASSWORD: ambari
      args:
        creates: /etc/ambari-server/conf/ambari.properties

    - name: Set custom user for Ambari daemon in ambari-env.sh
      lineinfile:
        path: /etc/ambari-server/conf/ambari-env.sh
        regexp: '^export AMBARI_SERVER_USER='
        line: 'export AMBARI_SERVER_USER=root'
        create: yes

    - name: Configure remote database connection properties in ambari.properties
      blockinfile:
        path: /etc/ambari-server/conf/ambari.properties
        block: |
          custom.postgres.jdbc.name=postgresql-jdbc.jar
          server.jdbc.connection-pool=internal
          server.jdbc.database=postgres
          server.jdbc.database_name=ambari
          server.jdbc.driver=org.postgresql.Driver
          server.jdbc.hostname={{ postgres_hostname }}
          server.jdbc.port=5432
          server.jdbc.postgres.schema=ambari
          server.jdbc.rca.driver=org.postgresql.Driver
          server.jdbc.rca.url=jdbc:postgresql://{{ postgres_hostname }}:5432/ambari
          server.jdbc.rca.user.name=ambari
          server.jdbc.rca.user.passwd=/etc/ambari-server/conf/password.dat
          server.jdbc.url=jdbc:postgresql://{{ postgres_hostname }}:5432/ambari
          server.jdbc.user.name=ambari
          server.jdbc.user.passwd=/etc/ambari-server/conf/password.dat

    - name: Enable GPL Licensed LZO packages in ambari.properties
      lineinfile:
        path: /etc/ambari-server/conf/ambari.properties
        regexp: '^server.enable_gpl_license='
        line: 'server.enable_gpl_license=true'
        create: yes

    - name: Start Ambari Server
      systemd:
        name: ambari-server
        state: started
        enabled: yes

    - name: Start Ambari Agent
      systemd:
        name: ambari-agent
        state: started
        enabled: yes